/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountWhereUniqueInput } from "../../account/base/AccountWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsJSON,
  IsBoolean,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { ScheduleEntryCreateNestedManyWithoutTransactionLinesInput } from "./ScheduleEntryCreateNestedManyWithoutTransactionLinesInput";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EntityWhereUniqueInput } from "../../entity/base/EntityWhereUniqueInput";
import { TransactionWhereUniqueInput } from "../../transaction/base/TransactionWhereUniqueInput";
@InputType()
class TransactionLineCreateInput {
  @ApiProperty({
    required: true,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @Field(() => AccountWhereUniqueInput)
  account!: AccountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleEntryCreateNestedManyWithoutTransactionLinesInput,
  })
  @ValidateNested()
  @Type(() => ScheduleEntryCreateNestedManyWithoutTransactionLinesInput)
  @IsOptional()
  @Field(() => ScheduleEntryCreateNestedManyWithoutTransactionLinesInput, {
    nullable: true,
  })
  createdFromSchedule?: ScheduleEntryCreateNestedManyWithoutTransactionLinesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  credit?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  data?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  debit?: number | null;

  @ApiProperty({
    required: false,
    type: () => EntityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EntityWhereUniqueInput)
  @IsOptional()
  @Field(() => EntityWhereUniqueInput, {
    nullable: true,
  })
  entity?: EntityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isReconciled?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  memo?: string | null;

  @ApiProperty({
    required: true,
    type: () => TransactionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransactionWhereUniqueInput)
  @Field(() => TransactionWhereUniqueInput)
  transaction!: TransactionWhereUniqueInput;
}
export { TransactionLineCreateInput };
