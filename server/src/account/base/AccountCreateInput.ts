/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
} from "class-validator";
import { AccountTypeWhereUniqueInput } from "../../accountType/base/AccountTypeWhereUniqueInput";
import { Type } from "class-transformer";
import { AccountCreateNestedManyWithoutAccountsInput } from "./AccountCreateNestedManyWithoutAccountsInput";
import { AccountWhereUniqueInput } from "./AccountWhereUniqueInput";
import { TransactionLineCreateNestedManyWithoutAccountsInput } from "./TransactionLineCreateNestedManyWithoutAccountsInput";
@InputType()
class AccountCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  accountNumber!: number;

  @ApiProperty({
    required: true,
    type: () => AccountTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountTypeWhereUniqueInput)
  @Field(() => AccountTypeWhereUniqueInput)
  accountType!: AccountTypeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AccountCreateNestedManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => AccountCreateNestedManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => AccountCreateNestedManyWithoutAccountsInput, {
    nullable: true,
  })
  childAccounts?: AccountCreateNestedManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isExternal?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isSummary?: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  parent?: AccountWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TransactionLineCreateNestedManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => TransactionLineCreateNestedManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => TransactionLineCreateNestedManyWithoutAccountsInput, {
    nullable: true,
  })
  transactionLines?: TransactionLineCreateNestedManyWithoutAccountsInput;
}
export { AccountCreateInput };
