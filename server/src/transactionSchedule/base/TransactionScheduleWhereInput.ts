/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { JsonFilter } from "../../util/JsonFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { ScheduleEntryListRelationFilter } from "../../scheduleEntry/base/ScheduleEntryListRelationFilter";
import { EnumTransactionScheduleScheduleType } from "./EnumTransactionScheduleScheduleType";
import { EnumTransactionScheduleStatus } from "./EnumTransactionScheduleStatus";
@InputType()
class TransactionScheduleWhereInput {
  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  data?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ScheduleEntryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ScheduleEntryListRelationFilter)
  @IsOptional()
  @Field(() => ScheduleEntryListRelationFilter, {
    nullable: true,
  })
  scheduleEntries?: ScheduleEntryListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumTransactionScheduleScheduleType,
  })
  @IsEnum(EnumTransactionScheduleScheduleType)
  @IsOptional()
  @Field(() => EnumTransactionScheduleScheduleType, {
    nullable: true,
  })
  scheduleType?:
    | "Loan"
    | "Amortization"
    | "Depreciation"
    | "Expense"
    | "Income";

  @ApiProperty({
    required: false,
    enum: EnumTransactionScheduleStatus,
  })
  @IsEnum(EnumTransactionScheduleStatus)
  @IsOptional()
  @Field(() => EnumTransactionScheduleStatus, {
    nullable: true,
  })
  status?:
    | "New"
    | "NotStarted"
    | "InProgress"
    | "PendingUpdate"
    | "FailedScheduleGeneration"
    | "Error"
    | "Complete"
    | "FailedTransactionGeneration";
}
export { TransactionScheduleWhereInput };
