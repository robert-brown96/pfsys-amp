/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsJSON,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { GraphQLJSONObject } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { ScheduleEntry } from "../../scheduleEntry/base/ScheduleEntry";
import { EnumTransactionScheduleScheduleType } from "./EnumTransactionScheduleScheduleType";
import { EnumTransactionScheduleStatus } from "./EnumTransactionScheduleStatus";
@ObjectType()
class TransactionSchedule {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  data!: JsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [ScheduleEntry],
  })
  @ValidateNested()
  @Type(() => ScheduleEntry)
  @IsOptional()
  scheduleEntries?: Array<ScheduleEntry>;

  @ApiProperty({
    required: true,
    enum: EnumTransactionScheduleScheduleType,
  })
  @IsEnum(EnumTransactionScheduleScheduleType)
  @Field(() => EnumTransactionScheduleScheduleType, {
    nullable: true,
  })
  scheduleType?:
    | "Loan"
    | "Amortization"
    | "Depreciation"
    | "Expense"
    | "Income";

  @ApiProperty({
    required: false,
    enum: EnumTransactionScheduleStatus,
  })
  @IsEnum(EnumTransactionScheduleStatus)
  @IsOptional()
  @Field(() => EnumTransactionScheduleStatus, {
    nullable: true,
  })
  status?:
    | "New"
    | "NotStarted"
    | "InProgress"
    | "PendingUpdate"
    | "FailedScheduleGeneration"
    | "Error"
    | "Complete"
    | "FailedTransactionGeneration"
    | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { TransactionSchedule };
