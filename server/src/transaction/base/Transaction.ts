/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Book } from "../../book/base/Book";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsJSON,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { Job } from "../../job/base/Job";
import { Currency } from "../../currency/base/Currency";
import { GraphQLJSONObject } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { TransactionLine } from "../../transactionLine/base/TransactionLine";
@ObjectType()
class Transaction {
  @ApiProperty({
    required: true,
    type: () => [Book],
  })
  @ValidateNested()
  @Type(() => Book)
  @IsOptional()
  book?: Array<Book>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Job,
  })
  @ValidateNested()
  @Type(() => Job)
  @IsOptional()
  createdFromJob?: Job | null;

  @ApiProperty({
    required: true,
    type: () => Currency,
  })
  @ValidateNested()
  @Type(() => Currency)
  currency?: Currency;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  data!: JsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  trandate!: Date;

  @ApiProperty({
    required: false,
    type: () => [TransactionLine],
  })
  @ValidateNested()
  @Type(() => TransactionLine)
  @IsOptional()
  transactionLines?: Array<TransactionLine>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Transaction };
