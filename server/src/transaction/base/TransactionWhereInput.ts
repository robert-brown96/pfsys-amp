/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookListRelationFilter } from "../../book/base/BookListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { JobWhereUniqueInput } from "../../job/base/JobWhereUniqueInput";
import { CurrencyWhereUniqueInput } from "../../currency/base/CurrencyWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { TransactionLineListRelationFilter } from "../../transactionLine/base/TransactionLineListRelationFilter";
@InputType()
class TransactionWhereInput {
  @ApiProperty({
    required: false,
    type: () => BookListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BookListRelationFilter)
  @IsOptional()
  @Field(() => BookListRelationFilter, {
    nullable: true,
  })
  book?: BookListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => JobWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobWhereUniqueInput)
  @IsOptional()
  @Field(() => JobWhereUniqueInput, {
    nullable: true,
  })
  createdFromJob?: JobWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CurrencyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CurrencyWhereUniqueInput)
  @IsOptional()
  @Field(() => CurrencyWhereUniqueInput, {
    nullable: true,
  })
  currency?: CurrencyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  trandate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => TransactionLineListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TransactionLineListRelationFilter)
  @IsOptional()
  @Field(() => TransactionLineListRelationFilter, {
    nullable: true,
  })
  transactionLines?: TransactionLineListRelationFilter;
}
export { TransactionWhereInput };
