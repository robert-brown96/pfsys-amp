/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountWhereUniqueInput } from "../../account/base/AccountWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { TransactionLineWhereUniqueInput } from "../../transactionLine/base/TransactionLineWhereUniqueInput";
import { EnumScheduleEntryStatus } from "./EnumScheduleEntryStatus";
import { TransactionScheduleWhereUniqueInput } from "../../transactionSchedule/base/TransactionScheduleWhereUniqueInput";
@InputType()
class ScheduleEntryUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  account?: AccountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number;

  @ApiProperty({
    required: false,
    type: () => TransactionLineWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransactionLineWhereUniqueInput)
  @IsOptional()
  @Field(() => TransactionLineWhereUniqueInput, {
    nullable: true,
  })
  createdTransactionLine?: TransactionLineWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  generateDate?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  memo?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  postDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumScheduleEntryStatus,
  })
  @IsEnum(EnumScheduleEntryStatus)
  @IsOptional()
  @Field(() => EnumScheduleEntryStatus, {
    nullable: true,
  })
  status?:
    | "NotStarted"
    | "PendingTransactionCreation"
    | "TransactionCreated"
    | "Error";

  @ApiProperty({
    required: false,
    type: () => TransactionScheduleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransactionScheduleWhereUniqueInput)
  @IsOptional()
  @Field(() => TransactionScheduleWhereUniqueInput, {
    nullable: true,
  })
  transactionSchedule?: TransactionScheduleWhereUniqueInput;
}
export { ScheduleEntryUpdateInput };
